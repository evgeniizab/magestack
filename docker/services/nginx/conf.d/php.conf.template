# Nginx configuration

server {

    listen 80 default_server;
    server_name ${SERVER_NAME} www.${SERVER_NAME};

    charset utf-8;

    root ${PROJECT_PATCH}/${ROOT}/pub;
    index index.php;

    error_log  ${PROJECT_PATCH}/logs/error-nginx.log;
    access_log ${PROJECT_PATCH}/logs/access-nginx.log;

    location ~* \.(gif|jpg|jpeg|png|js|css|ico|html)$ {
        root ${PROJECT_PATCH}/${ROOT}/pub;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    location ~ /\.ht {
           deny all;
    }

    location /pub/ {
        location ~ ^/pub/media/(downloadable|customer|import|custom_options|theme_customization/.*\.xml) {
            deny all;
        }
        root ${PROJECT_PATCH}/${ROOT}/pub;
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /static/ {
        # Uncomment the following line in production mode
        # expires max;

        # Remove signature of the static files that is used to overcome the browser cache
        location ~ ^/static/version\d*/ {
            rewrite ^/static/version\d*/(.*)$ /static/$1 last;
        }

        location ~* \.(ico|jpg|jpeg|png|gif|svg|svgz|webp|avif|avifs|js|css|eot|ttf|otf|woff|woff2|html|json|webmanifest)$ {
            add_header Cache-Control "public";
            add_header X-Frame-Options "SAMEORIGIN";
            expires +1y;

            if (!-f $request_filename) {
                rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
            }
        }
        location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
            add_header Cache-Control "no-store";
            add_header X-Frame-Options "SAMEORIGIN";
            expires    off;

            if (!-f $request_filename) {
               rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
            }
        }
        if (!-f $request_filename) {
            rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
        }
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /media/ {

    ## The following section allows to offload image resizing from Magento instance to the Nginx.
    ## Catalog image URL format should be set accordingly.
    ## See https://docs.magento.com/user-guide/configuration/general/web.html#url-options
    #   location ~* ^/media/catalog/.* {
    #
    #       # Replace placeholders and uncomment the line below to serve product images from public S3
    #       # See examples of S3 authentication at https://github.com/anomalizer/ngx_aws_auth
    #       # resolver 8.8.8.8;
    #       # proxy_pass https://<bucket-name>.<region-name>.amazonaws.com;
    #
    #       set $width "-";
    #       set $height "-";
    #       if ($arg_width != '') {
    #           set $width $arg_width;
    #       }
    #       if ($arg_height != '') {
    #           set $height $arg_height;
    #       }
    #       image_filter resize $width $height;
    #       image_filter_jpeg_quality 90;
    #   }

        try_files $uri $uri/ /get.php$is_args$args;

        location ~ ^/media/theme_customization/.*\.xml {
            deny all;
        }

        location ~* \.(ico|jpg|jpeg|png|gif|svg|svgz|webp|avif|avifs|js|css|eot|ttf|otf|woff|woff2)$ {
            add_header Cache-Control "public";
            add_header X-Frame-Options "SAMEORIGIN";
            expires +1y;
            try_files $uri $uri/ /get.php$is_args$args;
        }
        location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
            add_header Cache-Control "no-store";
            add_header X-Frame-Options "SAMEORIGIN";
            expires    off;
            try_files $uri $uri/ /get.php$is_args$args;
        }
        add_header X-Frame-Options "SAMEORIGIN";
    }

    # PHP entry point for main application
    location ~ ^/(index|get|static|errors/report|errors/404|errors/503|health_check|check)\.php$ {
        try_files $uri =404;
        fastcgi_pass ${PHP_HOST}:9000;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;

        fastcgi_param  PHP_FLAG  "session.auto_start=off \n suhosin.session.cryptua=off";
        fastcgi_param  PHP_VALUE "memory_limit=756M \n max_execution_time=18000";
        fastcgi_read_timeout 600s;
        fastcgi_connect_timeout 600s;

        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }

    gzip on;
    gzip_disable "msie6";

    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/xml+rss
        image/svg+xml;
    gzip_vary on;

    # Banned locations (only reached if the earlier PHP entry point regexes don't match)
    location ~* (\.php$|\.phtml$|\.htaccess$|\.git) {
        deny all;
    }

    client_max_body_size 10G;
    client_body_buffer_size 400M;
    fastcgi_buffers 64 4K;
    proxy_buffer_size          128k;
    proxy_buffers              4 256k;
    proxy_busy_buffers_size    256k;
}
